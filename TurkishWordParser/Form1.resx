<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AADc3NwBqampArS0tAOnp6cDlpaWA7i4uAOYmJgDpaWlA7OzswORkZECs7OzA6WlpQOYmJgDubm5A5aW
        lgOoqKgDsbGxA5GRkQO2trYDoqKiA5ucnAP///8AODUzITQ0NM40NDTOODQyIf///wCfoKEDn5+fA7m5
        uQOTk5MDrq6uA62trQOUlJQDurq6A52dnQOioqIDt7e3A5KSkgKysrIDq6urA5aWlgK6uroDm5ubAqWl
        pQO3t7cDo6OjAtXV1QGrq6sBioqKB3V1dQNvb28FcHBwCG9vbwFwcHAIcHBwBXBwcAJwcHAJb29vA29v
        bwVwcHAIb29vAnBwcAlwcHAFcHBwA3BwcAlubm4CcHBwBnJrZwZiocEGQlhjljtJUP87SVD/Qlhjl2Sh
        wQdyamYGcXFxB25ubgJwcHAJcXFxBHFxcQRwcHAJbm5uAnFxcQdwcHAGcHBwAnFxcQlwcHADcHBwBHFx
        cQhwcHABcHBwB3BwcAZxcXEChISECKCgoAK5ubkDgICAAldXVwlXV1cHWVlZA1ZWVgpZWVkEV1dXBlZW
        VglbW1sDVlZWCVdXVwZZWVkEVlZWClpaWgRXV1cHV1dXCVtbWwNWVlYKWFZWBkcAAAJlv+xkY77s92G5
        5v9hueX/Y77s92W/7GVMAAADWFdWBVZWVgpbW1sDV1dXCFdXVwdbW1sDVlZWCllZWQRYWFgGVlZWClxc
        XANXV1cIV1dXB1paWgNWVlYKWVlZBFhYWAZXV1cJcXFxArGxsQOnp6cCcnJyBlhYWAZWVlYHVlZWB1ZW
        VgZWVlYHVlZWBlZWVgZWVlYHVlZWBlZWVgZWVlYHVlZWBlZWVgdWVlYGVlZWBlZWVgdWV1cGSAAABGW+
        6jdnyfvgZ8r8/2fK/P9nyvz/Z8r7/2fJ++Blvus3SQAABFZXVwZWVlYHVlZWBlZWVgZWVlYHVlZWBlZW
        VgdWVlYHVlZWBlZWVgdWVlYGVlZWBlZWVgdWVlYGVlZWB1ZWVgdWVlYGampqBpycnAOenp4CcHBwCFlZ
        WQVWVlYGVlZWCVZWVgRWVlYIVlZWBlZWVgVWVlYJVlZWBFZWVgdWVlYIVlZWBFZWVghWVlYGVlZWBVZW
        VglQIgsDZLHXGGfI+blny/7/Z8n6/2fK/P9nyv3/Z8n6/2fL/v9nyPm4ZK7UGE4YAAJWVlYJVlZWBVZW
        VgVWVlYJVlZWBFZWVghWVlYHVlZWBFZWVglWVlYFVlZWBlZWVghWVlYEVlZWCFZWVgdXV1cEaWlpCJKS
        kgO5ubkDgICAAVZWVglWVlYHVlZWA1ZWVgtWVlYDVlZWBlZWVgpWVlYCVlZWClZWVgZWVlYDVlZWC1ZW
        VgNWVlYHVlZWCVdPSwJNSUcKX7Pdg2K96/1iuuf+Yr7t/mK86f5iu+j+Yr7t/mK65/5ivev9X7Tegk1K
        SAtXUEwCVlZWCFZWVghWVlYCVlZWC1ZWVgRWVlYFVlZWC1ZWVgJWVlYJVlZWB1ZWVgNWVlYLVlZWBFZW
        VgZWVlYKbW1tArKysgOYmJgCcHBwCFpaWgRWVlYGVlZWCVZWVgNWVlYJVlZWB1ZWVgRWVlYKVlZWBFZW
        VgZWVlYJVlZWAlZWVglWVlYGVlZWBFpZWQlQVFYnQlBY1kFRWv9BUFj+QlJa/kFRWP5BUFj+QlJa/kFQ
        WP5BUVn/QlFY1lBUViZaWVkJVlZWBVZWVgVWVlYKVlZWA1ZWVghWVlYHVlZWA1ZWVgpWVlYEVlZWBlZW
        VgpWVlYDVlZWCVZWVgdXV1cDaWlpCYyMjAOtra0Cc3NzBFdXVwdWVlYGVlZWBlZWVghWVlYGVlZWB1ZW
        VghWVlYGVlZWB1ZWVgZWVlYGVlZWB1ZWVgZWVlYHSkpKBGZmZkBmZmbPYF9f+l9eXf9fXl3/X15d/19e
        Xf9fXl3/X15d/15eXf9fXl3/YF9f+mZmZc9mZmY/SkpKBFZWVgdWVlYFVlZWB1ZWVgZWVlYGVlZWB1ZW
        VgZWVlYHVlZWB1ZWVgZWVlYIVlZWBlZWVgZWVlYHampqBaOjowOysrIDdnZ2A1ZWVghWVlYHVlZWBVZW
        VglWVlYFVlZWB1ZWVglWVlYEVlZWCFZWVgZWVlYFVlZWCVZWVgRWVlYHRkZGBGdnZ1dmZmb4Z2dn/2dn
        Z/9nZ2f/Z2dn/2dnZ/9nZ2f/Z2dn/2dnZ/9nZ2f/Z2dn/2ZmZvhmZmZWREREBFZWVgdWVlYEVlZWCVZW
        VgVWVlYGVlZWCFZWVgRWVlYIVlZWB1ZWVgVWVlYJVlZWBVZWVgZWVlYIa2trA6mpqQOUlJQCcHBwCVtb
        WwNWVlYGVlZWClZWVgJWVlYKVlZWB1ZWVgNWVlYLVlZWA1ZWVgdWVlYJVlZWAlZWVgpWVlYGVFRUAVZW
        VjhYWFjeWFhY/1hYWP9ZWVn/WFhY/1hYWP9YWFj/WFhY/1hYWP9YWFj/WFhY/1hYWN1WVlY4VVVVAlZW
        VgVWVlYKVlZWAlZWVghWVlYIVlZWA1ZWVgtWVlYEVlZWBlZWVgtWVlYCVlZWCVZWVgdXV1cDaWlpCYmJ
        iQO3t7cDfHx8AlZWVglWVlYHVlZWA1ZWVgtWVlYEVlZWBlZWVglWVlYCVlZWClZWVgZWVlYEVlZWClZW
        VgNWVlYHWlpaBVJSUl9RUVH8UVFR/1FRUf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FRUf9RUVH/UVFR/1FR
        UfxSUlJeW1tbBFZWVghWVlYDVlZWClZWVgRWVlYFVlZWClZWVgJWVlYJVlZWB1ZWVgNWVlYLVlZWBFZW
        VgZWVlYKbGxsArCwsAOkpKQCcXFxBlhYWAZWVlYGVlZWCFZWVgVWVlYHVlZWBlZWVgZWVlYIVlZWBVZW
        VgdWVlYHVlZWBVZWVgdWVlYGUlJSA1paWjJbW1vcW1tb/ltbW/1bW1v8W1tb/VtbW/1bW1v9W1tb/Vtb
        W/xbW1v9W1tb/ltbW9taWloyUlJSA1ZWVgZWVlYHVlZWBVZWVgdWVlYHVlZWBVZWVghWVlYGVlZWBlZW
        VgdWVlYFVlZWCFZWVgdWVlYGaWlpB5qamgOhoaECcXFxB1lZWQVWVlYHVlZWCFZWVgRWVlYIVlZWBlZW
        VgVWVlYJVlZWBVZWVgZWVlYIVlZWBFZWVghWVlYGFhYWAWZmZmFnZ2f7Z2dn/2dnZ/9nZ2f/Z2dn/2dn
        Z/9nZ2f/Z2dn/2dnZ/9nZ2f/Z2dn/2dnZ/tmZmZhMzMzAlZWVgZWVlYIVlZWBFZWVghWVlYHVlZWBVZW
        VglWVlYFVlZWBlZWVghWVlYEVlZWCFZWVgdWVlYFampqB5WVlQO5ubkDfn5+AVZWVglWVlYHVlZWA1ZW
        VgtWVlYDVlZWBlZWVglWVlYCVlZWClZWVgZWVlYDVlZWC1ZWVgNWVlYHUFBQBmRkZDViYmLhYmJi/mJi
        Yv1hYWH9YmJi/WJiYv1hYWH9YmJi/WFhYf1iYmL9YmJi/mJiYuFkZGQ1UFBQBlZWVghWVlYDVlZWC1ZW
        VgRWVlYFVlZWClZWVgJWVlYJVlZWB1ZWVgNWVlYLVlZWBFZWVgZWVlYKbGxsArKysgOWlpYCcHBwCVtb
        WwRWVlYGVlZWCVZWVgJWVlYJVlZWBlZWVgNWVlYKVlZWA1ZWVgdWVlYJVlZWAlZWVgpWVlYGd3d3AFJS
        UlVSUlLzUlJT/1JSUv5SUlL+UlJT/lJSU/5SUlP+UlJT/lJSUv5SUlL+UlJT/1JSUvNSUlJWYmJiAVZW
        VgVWVlYLVlZWAlZWVglWVlYIVlZWA1ZWVgpWVlYEVlZWBlZWVgpWVlYCVlZWCVZWVgdXV1cDaWlpCYuL
        iwOvr68DdXV1BFdXVwdWVlYHVlZWBVZWVghWVlYFVlZWBlZWVgdWVlYFVlZWB1hYWARXV1cEVlZWCFZW
        VgVWVlYHWVlZBVFSUkZXVlLlX1tS/2BdV/9hYF7/YFtU/19bUv9fWlL/YFtU/2FgXv9gXVf/X1tS/1dW
        UuVRUlJGWVlZBFZWVgdWVlYFVlZWCFdXVwVYWFgEVlZWB1ZWVgVWVlYHVlZWB1ZWVgVWVlYIVlZWBVZW
        VgZWVlYHa2trBKampgOwsLADdXV1BFdXVwdWVlYGVlZWBVZWVghWVlYFVlZWBlZWVghZWVkDU1NTJlJS
        UoNSUlIlWFhYBlZWVgVWVlYHVlZWCAAKVAS+mVWJy6FT/9O4hv/c1cf/zadg/8uhVf/LoVX/zadg/9zV
        x//TuIb/y6FT/76ZVYcABlQEVlZWB1ZWVgdWVlYFWFhYBlJSUiZSUlKCU1NTJllZWQNWVlYHVlZWB1ZW
        VgVWVlYIVlZWBVZWVgZWVlYIa2trBKampgOWlpYCcHBwCVtbWwRWVlYGVlZWCVZWVgJWVlYJVlZWBlZW
        VgNXV1cIUlJSJFJSUtFSUlLAUlJSI1dXVwlWVlYGQ0lWBIZ1VhDkslaw4rBT/+vNlf/68d//47Vh/+Oy
        Vf/kslX/47Vi//rx3//szZX/4rBT/+SzVq+FdVYPR0xWBFZWVgVXV1cJUlJSI1JSUr9SUlLRUlJSI1dX
        VwhWVlYEVlZWBlZWVgpWVlYCVlZWCVZWVgdXV1cDaWlpCYqKigO5ubkDfn5+AlZWVglWVlYHVlZWA1ZW
        VgpWVlYDVlZWBlZWVglWVlYCV1dXB1JSUjhSUlLNUlJSd39/fwBXV1YHABRWBuCwVkLfr1bv4rBT/+3Q
        mv/z6NT/5bZe/+GwVv/gsFb/5bZe//Po1P/t0Jn/4rBT/9+vVu7gsFZBAARWBFdWVgg6OjoAUlJScVJS
        UstSUlI4V1dXCFZWVgJWVlYJVlZWB1ZWVgNWVlYKVlZWBFZWVgZWVlYKbGxsArKysgOhoaECcXFxB1hY
        WAVWVlYGVlZWCFZWVgRWVlYIVlZWBlZWVgVWVlYIVlZWBVhYWAVTU1MjU1NTGVdXVgcADFYEzKNWIN+v
        VsDisVb/4a9T/+3Upf/26dH/4bJb/+KxVv/isVb/4bJb//Xp0v/t1KX/4K9T/+OxVv/fr1bAyqJWIAAA
        VgNXV1YHU1NTFlNTUyFXV1cFVlZWBVZWVglWVlYFVlZWBlZWVghWVlYEVlZWCFZWVgdWVlYFampqB5aW
        lgOkpKQCcHBwBlhYWAZWVlYGVlZWCFZWVgVWVlYHV1dXBlZWVgVWVlYIVlZWBVZWVgdXV1cGWVhXBA8o
        VgXOpFYn4bBWs+GwVv/isVb/4bBU/+/Zsf/05Mf/4bFY/+KxVv/isVb/4bFY//TkyP/v2bH/4bBU/+Kx
        Vv/hsFb/4LBWs8+lViYMJlYFWFhXBFdXVwZWVlYHVlZWBVZWVghWVlYGV1dXBVZWVgdWVlYFVlZWCFZW
        VgZWVlYFaWlpB5mZmQO4uLgDfX19AlZWVglWVlYHVlZWA1ZWVgtVVVUFU1NTE1VVVQxJSUkAVlZWCVZW
        VgZYV1YEKjlWCNmrVibgsFbB4LBW/+SyVv/gr1b/4rFW//PhwP/u2rb/47FV/+GwVv/gsFb/47JV/+7b
        t//y4b//4rFW/9+vVv/kslb/4bBW/9+vVsLbrFYmKDhWCFdXVgRWVlYFVlZWCkVFRQBVVVUKU1NTFVVV
        VQRWVlYLVlZWBFZWVgZWVlYKbGxsArGxsQOUlJQCcHBwCVtbWwRWVlYGVlZWCl1dXQFTU1MdUlJSs1JS
        UqNSUlJMU1NTCVZWVgY+RlYI16pWE92uVrTisVb/47JW/9+vVv/jslb/4rJb//Pm0P/w16j/365U/+Kx
        Vv/jsVb/365U//DXqP/z59D/4bJb/+SyVv/fr1b/47FW/+KxVv/drla01qlWEztEVgdWVlYHU1NTB1NT
        U0ZSUlKdUlJSulNTUyVqamoAVlZWCVZWVgdXV1cDaWlpCYmJiQOysrIDdnZ2A1dXVwhWVlYHVlZWBVZW
        VghUVFQLUlJSZlJSUsdSUlLXU1NTNVRWWQQ7RFYE261WfuOxVv/hsFb/4bBW/+OxVv/gr1X/5Ldl//fv
        3//pypH/4rBT/+GwVv/hsFb/4rBT/+nKkf/37t7/5Ldk/+CvVf/jsVb/4bBW/+GwVv/jsVb/3K1WfjxF
        VgRUVVkDU1NTK1JSUtFSUlLMUlJSblNTUw5WVlYJVlZWBVZWVgZWVlYIa2trA6mpqQOurq4Cc3NzBFdX
        VwdWVlYGVlZWBVZWVghWVlYGWVlZBFNTUxVSUlIzVFRUEQAOVwPUqFYw4LBW5OKxVv/hsVb/4bBW/+Kx
        Vv/hr1T/5r51//jy5v/mwHr/4rBU/+GwVv/hsFb/4rBU/+bBe//48eX/5r50/+GvVP/isVb/4bBW/+Gw
        Vv/isVb/4LBW5NSoVjAACFcDVFRUDlJSUjJTU1MYWVlZBFdXVwVWVlYIVlZWBlZWVgZWVlYHampqBKSk
        pAOYmJgCcHBwCFpaWgRWVlYGVlZWCVZWVgNWVlYKVlZWB1dXVwNXV1cIVVVXAxguVgTcrVaI5LJW/+Cv
        Vv/isVb/47JW/9+vVv/jsVP/6smN//Xu3//mumj/369V/+KxVv/isVb/365V/+a6aP/27uD/6cmM/+Ox
        U//gr1b/4rFW/+KxVv/gr1b/5LJW/9ytVocfMlYFVFVXA1dXVwhXV1cDVlZWBlZWVgpWVlYDVlZWCVZW
        VgdXV1cDaWlpCYyMjAO6uroDgYGBAVZWVglWVlYHVlZWA1ZWVgtWVlYEVlZWB1ZWVgpWVlYCREtWCb6a
        VhfjsVbJ369W/+OyVv/hsFb/4LBW/+SyVv/frlT/8Nqx//Xozv/gsVr/5LJW/+GwVv/gsFb/5LJW/+Cx
        Wv/158//8dqx/9+uVP/kslb/4bBW/+GwVv/kslb/369W/+KxVsnDnVYWRktWCVZWVgJWVlYJVlZWB1ZW
        VgNWVlYLVlZWBFZWVgZWVlYKbW1tArKysgOfn58CcHBwB1lZWQVWVlYGVlZWCVdXVwNYWFgGWVlZBFhY
        WANWVlYJAABWAdOnVjfgsFbv47JW/+CwVv/isVb/4rFW/+CvVv/ktF3/9OjR/+3VqP/jsVT/4LBW/+Kx
        Vv/isVb/4LBW/+KxVP/t1an/9OfR/+S0XP/gsFb/4rFW/+KxVv/gsFb/47JW/+CwVu7SplY3AABWAVZW
        VglYWFgDWlpaA1hYWAZXV1cDVlZWCFZWVgdXV1cFaWlpCJOTkwOmpqYCcnJyBlhYWAZWVlYHVlZWB1NT
        UxBTU1MxUlJSMlJSUiNVVVUJAABWAtqsVljhsFb84rFW/+GwVv/isVb/4rFW/+GvVP/mvnT/9/Hl/+jE
        gf/hsFT/4bBW/+KxVv/isVb/4bBW/+GwVP/oxIH/9/Hl/+a+c//hr1T/4rFW/+KxVv/hsFb/4rFW/+Gw
        VvzarFZXAABWAlVVVQlTU1MjUlJSMlNTUzBTU1MQVlZWBlZWVgdWVlYGampqBpycnAO3t7cDeXl5AlZW
        VglWVlYHwMDAAFJSUlZSUlLhUlJS51JSUrdSUlITAABXBNytVmzjslb/369W/+OyVv/hsFb/4LBW/+Ox
        VP/r0aD/9uzZ/+S2YP/frlL/47FU/+GwVf/gsFX/47FV/9+uU//ktmD/9+za/+vRoP/jsVT/4bBW/+Gw
        Vv/jslb/369W/+KxVv/drlZrAABXBFNTUxNSUlK3UlJS51JSUuFSUlJWbm5uAVZWVgZWVlYJa2trArCw
        sAOUlJQCcHBwCVtbWwRWVlYGVlZWCVJSUhVSUlJMUlJSTlJSUjdVVVUO//9VANytVmrgr1b/5LJW/9+v
        Vv/isVb/47FV/+CzYP/37Nj/8N25/+bAe//u0Jn/7das//Leuv/z4L3/7tm0//DWpv/ox4n/8d+///js
        1//gs1//4rFV/+KxVv/fr1b/5LJW/+CwVv/brFZr//9WAFVVVQ5SUlI4UlJSTVJSUk1SUlIVV1dXCFZW
        VgdXV1cDaWlpComJiQO0tLQDeHh4A1ZWVghWVlYHVlZWBFdXVwhwcHABXV1dAlhYWAZWVlYDAABWBNyt
        Vl7isVb94K9W/+OxVv/hsFb/4K9U/+zMkP/5+Pf/+fTs//jy5v/069r/9ebL//HgwP/x373/9OPF//Po
        0v/48eP/+vbw//n49//sy4//4K9U/+GwVv/jslb/4K9W/+KxVv3crVZeAABWBFZWVgNYWFgFXFxcA7Gx
        sQBXV1cIVlZWBVZWVgZWVlYJbGxsA6urqwOsrKwCcnJyBVdXVwdWVlYHVlZWBlZWVgdWVlYGVlZWBlZW
        VgdWVlYGAABWA9eqVkHhsVbz4bBW/+GxVv/hsFb/4bBV/+zQnP/y48b/7M+Z/+a/df/jtWH/4rJZ/+Gx
        Vv/hsFb/4rFX/+KzXP/lumv/6smN//Lhwf/s0Jv/4bBV/+GwVv/hsVb/4bBW/+GxVvPXqlZBAABWA1ZW
        VgZWVlYHVlZWBlZWVgZWVlYHVlZWBlZWVgZWVlYHampqBaGhoQOampoCcHBwCFpaWgRWVlYGVlZWCVZW
        VgNWVlYJVlZWBldXVwNXV1cHABNXAsWeVh3fr1bX47JW/+CvVv/isVb/4rFW/+CxWf/js1n/4a9T/+Cv
        VP/jslX/4K9W/+KxVv/isVb/4K9W/+OyVv/hsFX/4K9T/+SzWf/gsVn/4rFW/+KxVv/fr1b/47JW/+Cv
        VtfBm1YeAAZXAldXVwdXV1cEVlZWBlZWVglWVlYDVlZWCFZWVgdXV1cEaWlpCI+PjwO5ubkDg4ODAVZW
        VglWVlYHVlZWA1ZWVgtXV1cDW1tbA1RUVBNSUlInU1NUEWVgVgbisVaV369W/+OyVv/hsFb/4K9W/+Sy
        Vv/fr1b/4rFW/+OyVv/fr1b/5LJW/+GwVv/gsFb/5LJW/9+vVv/isVb/4rFW/9+vVv/kslb/4LBW/+Cw
        Vv/kslb/369W/+GwVpZoYlYGU1RVEFJSUidUVFQVWlpaBFdXVwJWVlYLVlZWBFZWVgZWVlYKbW1tArOz
        swOcnJwCcXFxCFlZWQRWVlYGVlZWCVdXVwNUVFQOUlJSXlJSUrxSUlLVUlJSMAAAZAHTp1ZE47JW7+Cw
        Vv/hsVb/4rFW/+CvVv/jslb/4bBW/+CwVv/jslb/4LBW/+KxVv/isVb/4LBW/+OyVv/hsFb/4bBW/+Oy
        Vv/gr1b/4rFW/+KxVv/gr1b/47JW79SoVkUAAFsCUlJSJlJSUs9SUlLCUlJSZlRUVBFXV1cDVlZWCFZW
        VgdXV1cEampqCJCQkAOrq6sCcnJyBVdXVwdWVlYGVlZWBldXVwVTU1MbUlJSuFJSUq9SUlJPVFRUDkxQ
        VgaPe1YL369WneGxVv/hsVb/4rFW/+GwVv/hsFb/4bFW/+GwVv/hsVb/4bFW/+KxVv/isVb/4bFW/+Kx
        Vv/hsVb/4bFW/+GwVv/hsFb/4bFW/+GxVv/hsVb/369WnpJ9VgtMT1YGVFRUDFJSUkhSUlKoUlJSv1NT
        UyNYWFgEVlZWBlZWVgZWVlYHaWlpBp+fnwO1tbUDeXl5AlZWVghWVlYHVlZWBFZWVglVVVUFU1NTF1VV
        VQ0lJSUAVlZWCFZWVgYAAFYCxZ5WLOKxVtLhsFb/4LBW/+OyVv/gsFb/4rFW/+KxVv/gr1b/47JW/+Gw
        Vv/hsFb/47JW/+CvVv/isVb/4rFW/+CvVv/jslb/4bBW/+GwVv/jsVbTx6BWLQAAVgJXVlYGVlZWCQAA
        AABVVVUMU1NTGVVVVQZWVlYJVlZWBFZWVgZWVlYJbGxsA6ysrAOUlJQCcHBwCVtbWwRWVlYGVlZWClZW
        VgJWVlYJV1dXBVdXVwNWVlYLVlZWA1ZWVgdXV1YJ//RUANGmVkbhsVbh47JW/9+vVv/kslb/4bBW/+Cw
        Vv/kslb/369W/+KxVv/jsVb/369W/+SyVv/hsFb/4LBW/+SyVv/fr1b/47FW/+KxVuLRplZJ//9UAFdX
        VghWVlYHVlZWAlZWVgtWVlYEV1dXBFZWVgpWVlYCVlZWCVZWVgdYWFgDaWlpCoiIiAO2trYDeHh4AlZW
        VglWVlYHVlZWBFZWVgpWVlYEVlZWBlZWVglWVlYDVlZWCVdXVwVTU1MRU1NUFAAAWAHXqlZG369W1uOy
        Vv/gsFb/4rFW/+KxVv/gr1b/47JW/+GwVv/hsFb/47JW/+CvVv/isVb/4rFW/+CvVv/jslb/4LBW19ap
        VkkAAFgBU1NUFFNTUxFYWFgEVlZWCVZWVgNWVlYIVlZWB1ZWVgRWVlYKVlZWBVZWVgZWVlYJampqA66u
        rgOoqKgCcnJyBVdXVwZWVlYHVlZWB1ZWVgZWVlYHVlZWB1ZWVgdWVlYHWFhYBFNTUyZSUlK0UlJScVVW
        WQQADVYE0aZWLd+vVqfisVb04rFW/+GxVv/isVb/4bBW/+KxVv/hsVb/4bBW/+KxVv/hsVb/4bBW/+Gx
        VvTfr1ao0qdWLwAOVgRUVlkEUlJScVJSUrRTU1MmWFhYBFZWVgdWVlYGVlZWB1ZWVgdWVlYGVlZWB1ZW
        VgdWVlYGampqBp6engOdnZ0CcHBwB1lZWQRWVlYGVlZWCVZWVgRWVlYJVlZWB1ZWVgRXV1cIU1NTG1JS
        Ur1SUlLVUlJSNVdXVwdWVlYGAABWApF8VhDerlZN369Wp+CwVuHjslb64LBW/+KxVv/isVb/4K9W/+Oy
        VvrgsFbh369Wp96vVk2UflYQAABWA1ZWVgVXV1cHUlJSNVJSUtVSUlK+UlJSG1dXVwhWVlYFVlZWBlZW
        VglWVlYEVlZWCVZWVgdXV1cEaWlpCJGRkQO5ubkDg4ODAVZWVglWVlYHVlZWA1ZWVgtWVlYDVlZWB1ZW
        VgoSEhIAU1NTK1JSUp9SUlI3V1dXCFZWVgNWVlYHVlZWCf//OAAAGlcFkX1WCdeqVibTp1ZV4rFWcdyt
        VobbrVaG4rFWcdOnVlXSp1YnmYFWCAAeVwYAAP8AV1ZWCFZWVghWVlYCWFhYCFJSUjdSUlKjU1NTLzY2
        NgBWVlYJVlZWB1ZWVgNWVlYLVlZWBFZWVgZWVlYKbGxsArOzswOZmZkCcHBwCFpaWgRWVlYGVlZWCVZW
        VgNWVlYJVlZWB1ZWVgRWVlYKVlZWBFVVVQlXV1cHVlZWA1ZWVglWVlYGWFhYA1JSUlxSUlJgT1JWBiQ2
        Vgb//1YAABNWBgAA4wD//0YAABpWBv//VgAiNFYGT1JXBlJSUldSUlJlVlZWBVZWVgVWVlYKVlZWA1dX
        VwdVVVULVlZWBFZWVgpWVlYFVlZWBlZWVgpWVlYDVlZWCVZWVgdXV1cEaWlpCY6OjgOsrKwCc3NzBFdX
        VwdWVlYHVlZWBlZWVgdWVlYGVlZWBlZWVgdWVlYGVlZWB1ZWVgZWVlYGVlZWB1ZWVgZXV1cFU1NTG1JS
        UtJSUlKPWFhYBVZWVgZWVlYHV1dXBVJSUjlSUlI5V1dXBVZWVgdWVlYGWVlZA1JSUoBSUlLcU1NTI1dX
        VwVWVlYGVlZWB1ZWVgZWVlYGVlZWB1ZWVgZWVlYHVlZWB1ZWVgZWVlYHVlZWBlZWVgdWVlYHa2trBaKi
        ogOzs7MDeXl5A1ZWVghWVlYHV1dXBFZWVglXV1cFVlZWBlZWVghXV1cEVlZWCFZWVgdWVlYFVlZWCVdX
        VwVbW1sDUlJSV1JSUulSUlI/W1tbA1ZWVgVWVlYJVlZWBFJSUqVSUlKlV1dXBFZWVglWVlYGWlpaA1NT
        UzRSUlLlUlJSZlpaWgNXV1cEVlZWCVZWVgVWVlYGVlZWCVdXVwRWVlYIVlZWB1dXVwRWVlYJVlZWBVZW
        VgZWVlYJbGxsA6urqwOlpaUBgYGBB3Z2dgNra2sFZ2dnCXx8fAFoaGgIampqBnJycgJnZ2cJcnJyAmlp
        aQZoaGgIfHx8AWdnZwl+fn4DVFRUM1RUVGtbW1sIa2trBmdnZwh+fn4BZWVlClNTU6xTU1OsZWVlCnl5
        eQJoaGgHaWlpB19fXwVUVFRlVFRUPImJiQJnZ2cJeXl5AmhoaAhoaGgHdnZ2AmZmZgptbW0Da2trBWZm
        Zgl9fX0BZ2dnCGlpaQZ0dHQCenp6CJubmwLY2NgBn5+fAaurqwOhoaEDjY2NAq+vrwOQkJACnp6eA6ur
        qwOFhYUCq6urA5+fnwOQkJACr6+vBI2NjQKfn58D9PT0AgAAAAC5ubkDmpqaA5OTkwKwsLAEoqKiAlRU
        VJdUVFSXoaGhAa6urgOXl5cDlZWVA7a2tgMAAAAA/Pz8AqOjowOIiIgCrq6uBJOTkwOZmZkDrKysBIWF
        hQKnp6cDoaGhA4qKigKurq4EkJCQApubmwOrq6sDmZmZAtLS0gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>